<Activity mc:Ignorable="sap sap2010" x:Class="_05_DT" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="660,2993.3333333333335" sap2010:WorkflowViewState.IdRef="_05_DT_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Excel 과 같이 사용하는 경우가 많음" DisplayName="_05_DT" sap:VirtualizedContainerService.HintSize="670,2928.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtMovie">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="new system.data.DataTable" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="strMovie" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFilter">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="new system.data.DataTable" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="write range 할때 처럼&#xD;&#xA;엑셀 프로그램이 없고 할때 간단히 쓰기 좋음&#xD;&#xA;&#xD;&#xA;사용 범위에 A1, 혹은 A1:G12 식으로 사용 가능&#xD;&#xA;&#xD;&#xA;속성 &gt; 출력 &gt; 데이터 테이블 &gt; 데이터 바인딩할 변수 입력&#xD;&#xA;(변수 생성 시 초기화 먼저)" DataTable="[dtMovie]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="608,268" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="A1" SheetName="Movie" WorkbookPath="T_Result.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Sequence DisplayName="DT 내용 확인하기 | Sequence" sap:VirtualizedContainerService.HintSize="608,407.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:OutputDataTable sap2010:Annotation.AnnotationText="속성 &gt; 출력 &gt; 텍스트 &gt; 데이터를 텍스트로 변환해 바인딩할 변수 입력" DataTable="[dtMovie]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="388,165.33333333333334" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[strMovie]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:OutputDataTable>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="388,114" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[strMovie]" />
    </Sequence>
    <Sequence DisplayName="DT 필터링 하기 | Sequence" sap:VirtualizedContainerService.HintSize="608,2134.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap2010:Annotation.AnnotationText="필터링한 데이터 테이블을 담을 변수를 선언 -&gt; 초기화 -&gt; clone으로 스키마 설정" sap:VirtualizedContainerService.HintSize="546,168.66666666666666" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtFilter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dtMovie.clone]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="입력 DT 의 데이터를 한 행씩 처리함." DataTable="[dtMovie]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="546,1620" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="512,1382.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="조건 : 'Reporter' 행에 '박미애'라는 내용이 포함 되었는지 확인&#xD;&#xA;&#xD;&#xA;CurrentRow(&quot;Reporter&quot;) -&gt; Object 타입 -&gt; String 타입으로 캐스팅 -&gt; Contains 함수로 원하는 문자열을 갖고 있는지 확인 -&gt; Boolean 형식값 반환&#xD;&#xA;&#xD;&#xA;참 : &#xD;&#xA;    dtFilter 에 Add Data Row 액티비티로 현재 검사 중인 행을 삽입해줌.&#xD;&#xA;&#xD;&#xA;거짓 : " Condition="[CurrentRow(&quot;Reporter&quot;).ToString.Contains(&quot;박미애&quot;)]" sap:VirtualizedContainerService.HintSize="450,1298" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,484" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="데이터 행을 배열로 바꿔 Row를 통째로 넣거나&#xD;&#xA;&#xD;&#xA;CurrentRow.ItemArray&#xD;&#xA;&#xD;&#xA;배열 행으로 각 칼럼에 들어갈 요소를 명시하여 배열 형태로 넣어줄 수도 있음.&#xD;&#xA;&#xD;&#xA;{CurrentRow(&quot;칼럼명&quot; or index 숫자), CurrentRow(1)}&#xD;&#xA;&#xD;&#xA;Get Row Item 액티비티로 뽑아서 배열로 넣어줄 수도 있음." ArrayRow="[{CurrentRow(0), CurrentRow(1)}]" DataTable="[dtFilter]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="354,399.3333333333333" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:Annotation.AnnotationText="새로운 Data Table을 사용하지 않는 경우 Assign으로 currentRow(n) 의 값을 직접 지정해 바꿔줄 수도 있음" DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,480.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="데이터 행으로 Row를 통째로 넣거나&#xA;&#xA;CurrentRow&#xA;&#xA;배열 행으로 각 칼럼에 들어갈 요소를 명시하여 배열 형태로 넣어줄 수도 있음.&#xA;&#xA;{CurrentRow(0), CurrentRow(1)}" ArrayRow="[{&quot;&quot;, &quot;불일치&quot;}]" DataTable="[dtFilter]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="354,352" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:OutputDataTable DataTable="[dtFilter]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="546,121.33333333333333" sap2010:WorkflowViewState.IdRef="OutputDataTable_2" Text="[strMovie]" />
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="546,114" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[strMovie]" />
    </Sequence>
  </Sequence>
</Activity>